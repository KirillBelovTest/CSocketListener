(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     66655,       1468]
NotebookOptionsPosition[     27474,        678]
NotebookOutlinePosition[     65657,       1449]
CellTagsIndexPosition[     65614,       1446]
WindowTitle->Automatic
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"ParentDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], "]"}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"PacletDirectoryLoad", "[", 
   RowBox[{"Directory", "[", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LibraryUnload", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<LibraryResources\>\"", ",", " ", 
       RowBox[{"$SystemID", " ", "<>", " ", "\"\<-v7\>\""}], ",", " ", 
       "\"\<csockets.dll\>\""}], "}"}], "]"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeleteFile", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<LibraryResources\>\"", ",", " ", 
       RowBox[{"$SystemID", " ", "<>", " ", "\"\<-v7\>\""}], ",", " ", 
       "\"\<csockets.dll\>\""}], "}"}], "]"}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Get", "[", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Scripts\>\"", ",", " ", "\"\<Build.wls\>\""}], "}"}], 
     "]"}], "]"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Get", "[", "\"\<KirillBelov`CSockets`\>\"", "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ValueQ", "[", "client", "]"}], ",", " ", 
     RowBox[{"Close", "[", "client", "]"}]}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ValueQ", "[", "listener", "]"}], ",", " ", 
     RowBox[{"DeleteObject", "[", "listener", "]"}]}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"ValueQ", "[", "server", "]"}], ",", " ", 
     RowBox[{"Close", "[", "server", "]"}]}], "]"}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"server", " ", "=", " ", 
    RowBox[{"CSocketOpen", "[", "8000", "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"listener", " ", "=", " ", 
    RowBox[{"SocketListen", "[", 
     RowBox[{"server", ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"#Event", " ", "===", " ", "\"\<Received\>\""}], ",", " ", 
           RowBox[{"request", " ", "=", " ", "#Data"}]}], "]"}], ";", " ", 
         RowBox[{"BinaryWrite", "[", 
          RowBox[{"#SourceSocket", ",", " ", "#DataByteArray"}], "]"}]}], 
        ")"}], "&"}]}], "]"}]}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"client", " ", "=", " ", 
    RowBox[{"CSocketConnect", "[", "8000", "]"}]}], ";"}], " "}]}], "Environ",
 CellChangeTimes->{{3.9161974160052624`*^9, 3.9161974398050575`*^9}, {
   3.9161975146761284`*^9, 3.9161976841077843`*^9}, {3.916197900401701*^9, 
   3.916197920529995*^9}, 3.916198025577812*^9, {3.9161980784968433`*^9, 
   3.9161980795331535`*^9}, {3.916198148134985*^9, 3.916198148859123*^9}, {
   3.9357139183586655`*^9, 3.935713923667593*^9}, {3.935713978566536*^9, 
   3.935714027868271*^9}},
 CellLabel->"In[13]:=",
 CellID->163276962,ExpressionUUID->"a84a7730-0b30-e540-9e71-c224c5834f89"],

Cell[BoxData[
 TemplateBox[{
  "LibraryFunction", "nolib", 
   "\"The library \\!\\(\\*RowBox[{\\\"\\\\\\\"LibraryResources\\\\\\\\\\\\\\\
\\Windows-x86-64-v7\\\\\\\\\\\\\\\\csockets.dll\\\\\\\"\\\"}]\\) cannot be \
found.\"", 2, 3, 1, 21996640697626725554, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935713998765993*^9, 3.9357140441655827`*^9},
 CellLabel->"During evaluation of In[1]:=",
 CellID->342844701,ExpressionUUID->"7567496b-3f1d-fa45-9e5f-f35e002aa202"],

Cell[BoxData[
 TemplateBox[{
  "DeleteFile", "fdnfnd", 
   "\"Directory or file \\\"\\!\\(\\*RowBox[{\\\"\\\\\\\"LibraryResources\\\\\
\\\\\\\\\\\\Windows-x86-64-v7\\\\\\\\\\\\\\\\csockets.dll\\\\\\\"\\\"}]\\)\\\"\
 not found.\"", 2, 4, 2, 21996640697626725554, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.935713998765993*^9, 3.935714044192087*^9},
 CellLabel->"During evaluation of In[1]:=",
 CellID->362658460,ExpressionUUID->"f997d7c5-aeb4-414e-95c3-1d6cd483b722"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"client", ",", " ", "\"\<hello\>\""}], "]"}], ";", " ", 
  "request"}]], "VerificationTest",
 CellChangeTimes->{{3.9161976964891224`*^9, 3.916197701599407*^9}, {
   3.916197869662529*^9, 3.916197877189516*^9}, {3.916197928216713*^9, 
   3.916197932655779*^9}, 3.9161981865610714`*^9},
 CellLabel->"In[14]:=",
 CellID->11043262,ExpressionUUID->"fcb45dd5-fd2e-464e-8e38-fefda24beed0"],

Cell[BoxData["\"\<hello\>\""], "ExpectedOutput",
 CellChangeTimes->{{3.916197939214611*^9, 3.916197944317066*^9}},
 CellID->312015750,ExpressionUUID->"453d3be9-7e6c-e747-982e-ab3a602606ef"],

Cell[BoxData["request"], "ActualOutput",
 CellID->7206544,ExpressionUUID->"6786a582-34d4-8c4a-8234-ca8dea4f71ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"TestID", "\[Rule]", "\"\<EchoServerTest\>\""}], 
  "}"}]], "TestOptions",
 CellChangeTimes->{{3.916197458911085*^9, 3.9161975088998775`*^9}},
 CellID->215294058,ExpressionUUID->"3baf7672-685b-a644-b5d7-93c010e25630"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "MUnitStrings", "Failure-TestFailure"],
            
            ImageSizeCache->{
             45.903319001197815`, {0.16406249441206455`, 
              10.021484033670276`}}],
           StripOnInput->False,
           LineColor->GrayLevel[1],
           FrontFaceColor->GrayLevel[1],
           BackFaceColor->GrayLevel[1],
           GraphicsColor->GrayLevel[1],
           FontFamily->"Arial",
           FontSize->14,
           FontWeight->Bold,
           FontColor->GrayLevel[1]], 
          
          DynamicBox[FEPrivate`FrontEndResource[
           "MUnitExpressions", "FailureX"],
           ImageSizeCache->{12., {3.3544921875, 8.6455078125}}]}
        },
        AutoDelete->False,
        GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], 
      ItemBox["\<\"\"\>",
       ItemSize->Fit,
       StripOnInput->False], 
      ActionMenuBox[
       TagBox[GridBox[{
          {
           StyleBox[
            
            DynamicBox[FEPrivate`FrontEndResource[
             "MUnitStrings", "Details-Label"],
             
             ImageSizeCache->{
              32.792967796325684`, {0.11718749720603228`, 7.158202954335138}}],
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontFamily->"Helvetica",
            FontSize->10,
            FontColor->GrayLevel[1]], 
           StyleBox["\<\"\[RightGuillemet]\"\>",
            StripOnInput->False,
            LineColor->GrayLevel[1],
            FrontFaceColor->GrayLevel[1],
            BackFaceColor->GrayLevel[1],
            GraphicsColor->GrayLevel[1],
            FontSize->12,
            FontColor->GrayLevel[1]]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
         GridBoxSpacings->{"ColumnsIndexed" -> {2 -> 0.3}}],
        "Grid"],{
       TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]], 
              RGBColor[0.458824, 0.458824, 0.458824], StripOnInput -> False], 
             StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"EchoServerTest\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource["MUnitStrings", "TestID-Detail"]]], 
             RGBColor[0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"EchoServerTest\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[\\\"request\\\", Function[Short[Slot[1], \
Rational[2, 3]]]]\\)\"", RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> 
              False]}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ActualOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"request\", Function[Short[Slot[1], Rational[2, \
3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[\\\"\\\\\\\"hello\\\\\\\"\\\", \
Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", RGBColor[
              0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "ExpectedOutput-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[\"\\\"hello\\\"\", Function[Short[Slot[1], \
Rational[2, 3]]]]\)", RGBColor[0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}], 
        TagBox[GridBox[{{
            StyleBox[
             DynamicBox[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]], RGBColor[
              0.458824, 0.458824, 0.458824], StripOnInput -> False], StyleBox[
             "\"\\!\\(\\*TagBox[TemplateBox[List[\\\"0.`\\\", \\\"\\\\\\\"s\\\
\\\\\"\\\", \\\"s\\\", \\\"\\\\\\\"Seconds\\\\\\\"\\\"], \\\"Quantity\\\", \
Rule[SyntaxForm, Mod]], Function[Short[Slot[1], Rational[2, 3]]]]\\)\"", 
              RGBColor[0.14902, 0.14902, 0.14902], StripOnInput -> False]}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {2 -> 0.5}, "Rows" -> {{Automatic}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}], 
          "Grid"] :> Grid[{{
           Style[Dynamic[
             RawBoxes[
              FEPrivate`FrontEndResource[
               "MUnitStrings", "CPUTimeUsed-Detail"]]], RGBColor[
             0.458824, 0.458824, 0.458824]], Style[
            "\!\(\*TagBox[TemplateBox[List[\"0.`\", \"\\\"s\\\"\", \"s\", \
\"\\\"Seconds\\\"\"], \"Quantity\", Rule[SyntaxForm, Mod]], \
Function[Short[Slot[1], Rational[2, 3]]]]\)", RGBColor[
             0.14902, 0.14902, 0.14902]]}}, 
          BaseStyle -> {FontFamily -> "Helvetica", FontWeight -> "Bold"}, 
          Spacings -> {{2 -> 0.5}, Automatic}]},
       Appearance->None]}
    },
    AutoDelete->False,
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Right}}},
    GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}}],
   "Grid"],
  ImageSize->Full]], "TestFailure",
 CellID->251743139,ExpressionUUID->"bc8eb20f-a9ab-0e4b-882f-56493bed66eb"],

Cell[BoxData[
 PaneBox[
  TagBox[GridBox[{
     {
      PaneBox[
       TagBox[GridBox[{
          {
           DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
            DynamicWrapperBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                TagBox[GridBox[{
                   {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    
                    ImageSizeCache->{
                    12., {3.9335936884162948`, 8.066406311583705}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddMessages-Label"],
                    
                    ImageSizeCache->{
                    77.4882621910572, {2.25048833002802, 8.701172063592821}}],
                     "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                  },
                  AutoDelete->False,
                  
                  GridBoxItemSize->{
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                  
                  GridBoxSpacings->{
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                 "Grid"],
                
                Appearance->FEPrivate`FrontEndResource[
                 "MUnitExpressions", "ButtonAppearances"],
                
                ButtonFunction:>
                 Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addMessages[]],
                Evaluator->Automatic,
                FrameMargins->{{10, 10}, {0, 0}},
                ImageSize->Automatic,
                Method->"Queued"],
               DynamicBox[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "AddMessages-Tooltip"]],
               TooltipDelay->0.5],
              Annotation[#, 
               Dynamic[
                RawBoxes[
                 FEPrivate`FrontEndResource[
                 "MUnitStrings", "AddMessages-Tooltip"]]], "Tooltip"]& ], 
             MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
             
             ImageSizeCache->{
              115.0882621910572, {10.933593688416295`, 15.066406311583705`}}],
            DynamicModuleValues:>{}], 
           TagBox[GridBox[{
              {
               DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
                DynamicWrapperBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    TagBox[GridBox[{
                    {
                    PaneBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Add"],
                    
                    ImageSizeCache->{
                    12., {3.9335936884162948`, 8.066406311583705}}],
                    BaselinePosition->(Center -> Scaled[0.5])], 
                    StyleBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Label"],
                    
                    ImageSizeCache->{
                    43.995118379592896`, {25.9678955078125, 12.0634765625}}], 
                    "ButtonText",
                    StripOnInput->False,
                    FontColor->Dynamic[
                    If[MUnit`Palette`Private`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
                    },
                    AutoDelete->False,
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
                    
                    GridBoxSpacings->{
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
                    "Grid"],
                    
                    Appearance->FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"],
                    
                    ButtonFunction:>
                    Block[{$ContextPath}, Needs["MUnit`"]; MUnit`addOptions[]],
                    Evaluator->Automatic,
                    FrameMargins->{{10, 10}, {0, 0}},
                    ImageSize->Automatic,
                    Method->"Queued"],
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]],
                   TooltipDelay->0.5],
                  Annotation[#, 
                   Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AddOptions-Tooltip"]]], "Tooltip"]& ], 
                 MUnit`Palette`Private`hover$$ = CurrentValue["MouseOver"],
                 
                 ImageSizeCache->{
                  102.09202899408342`, {17.949279723572545`, 
                   22.082092346739955`}}],
                DynamicModuleValues:>{}], 
               ActionMenuBox[
                ButtonBox["\<\"\"\>",
                 
                 Appearance->FEPrivate`FrontEndResource[
                  "MUnitExpressions", "ButtonAppearancesNoLeftBorder"],
                 ButtonFunction:>{},
                 ContentPadding->False,
                 Evaluator->None,
                 Method->"Preemptive"],{
                DynamicBox[SymbolName[MemoryConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MemoryConstraint]]], 
                 DynamicBox[SymbolName[MetaInformation]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[MetaInformation]]], 
                 DynamicBox[SymbolName[SameTest]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[SameTest]]], 
                 DynamicBox[SymbolName[TestID]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TestID]]], 
                 DynamicBox[SymbolName[TimeConstraint]] :> 
                 Block[{$ContextPath}, Needs["MUnit`"]; 
                   MUnit`InsertOptionRule[SymbolName[TimeConstraint]]]},
                Appearance->None,
                Method->"Queued"]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{Automatic}}}],
            "Grid"]}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
         GridBoxSpacings->{
          "ColumnsIndexed" -> {2 -> 0.5, 3 -> 2, 4 -> 0.5}, 
           "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->{Left, Center},
       ImageSize->Full], 
      ItemBox["\<\"\"\>",
       ItemSize->Full,
       StripOnInput->False], 
      ButtonBox[
       TagBox[
        TooltipBox[
         PaneSelectorBox[{False->
          TagBox[GridBox[{
             {
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "ReplaceOutput"],
                
                ImageSizeCache->{
                 14., {3.9335936884162948`, 8.066406311583705}}],
               ImageMargins->{{0, 0}, {3, 0}}], 
              StyleBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitStrings", "ReplaceOutput-Label"],
                
                ImageSizeCache->{
                 83.38035191559791, {2.121582077234052, 8.701172063592821}}], 
               "ButtonText",
               StripOnInput->False,
               AdjustmentBoxOptions->{BoxBaselineShift->-50}]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"], True->
          TagBox[GridBox[{
             {
              PaneBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitExpressions", "ReplaceOutput"]],
               ImageMargins->{{0, 0}, {3, 0}}], 
              StyleBox[
               
               DynamicBox[FEPrivate`FrontEndResource[
                "MUnitStrings", "ReplaceOutput-Label"]], "ButtonText",
               StripOnInput->False,
               LineColor->RGBColor[0.9059, 0.3451, 0.102],
               FrontFaceColor->RGBColor[0.9059, 0.3451, 0.102],
               BackFaceColor->RGBColor[0.9059, 0.3451, 0.102],
               GraphicsColor->RGBColor[0.9059, 0.3451, 0.102],
               FontColor->RGBColor[0.9059, 0.3451, 0.102]]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Center}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
           "Grid"]}, Dynamic[
           CurrentValue["MouseOver"]],
          FrameMargins->0,
          ImageSize->Automatic],
         DynamicBox[
          FEPrivate`FrontEndResource["MUnitStrings", "ReplaceOutput-Tooltip"]],
         TooltipDelay->0.5],
        Annotation[#, 
         Dynamic[
          RawBoxes[
           FEPrivate`FrontEndResource[
           "MUnitStrings", "ReplaceOutput-Tooltip"]]], "Tooltip"]& ],
       Appearance->FEPrivate`FrontEndResource[
        "MUnitExpressions", "ButtonAppearances"],
       ButtonFunction:>MUnit`testReplaceOutput[
         TestObject[<|
          "MetaInformation" -> None, "AbsoluteTime" -> 
           3.935713949836607`16.648628510934365*^9, "SameTest" -> SameQ, 
           "SameMessages" -> Testing`MessageMatchQ, "MemoryConstraint" -> 
           DirectedInfinity[1], "TimeConstraint" -> DirectedInfinity[1], 
           "CreationID" -> "723aa131-1f47-408e-ae22-72510f20a7dd", "TestID" -> 
           "EchoServerTest", "TestFileName" -> "", "EvaluationID" -> 
           "2cb8dfc2-d9b0-4ff5-bff0-13f452c3195c", "Input" -> 
           HoldForm[
            WriteString[$CellContext`client, "hello"]; $CellContext`request], 
           "ExpectedMessages" -> HoldForm[{}], "ActualOutput" -> 
           HoldForm[$CellContext`request], "ActualMessages" -> {}, 
           "AbsoluteTimeUsed" -> 0``7.150514997831988, "CPUTimeUsed" -> 0., 
           "MemoryUsed" -> 3440, "IntermediateTestsTree" -> {}, 
           "ExpectedOutput" -> HoldForm["hello"], "Outcome" -> "Failure", 
           "FailureType" -> "SameTestFailure"|>]],
       Evaluator->Automatic,
       FrameMargins->{{10, 10}, {0, 0}},
       ImageSize->Automatic,
       Method->"Queued"], 
      DynamicModuleBox[{MUnit`Palette`Private`hover$$ = False}, 
       DynamicWrapperBox[
        TagBox[
         TooltipBox[
          ButtonBox[
           TagBox[GridBox[{
              {
               PaneBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitExpressions", "Rerun"],
                 
                 ImageSizeCache->{
                  15., {5.433593688416295, 9.566406311583705}}],
                BaselinePosition->(Center -> Scaled[0.5])], 
               StyleBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "MUnitStrings", "Rerun-Label"],
                 
                 ImageSizeCache->{
                  32.339356899261475`, {0.13427734666038305`, 
                   8.169433770817704}}], "ButtonText",
                StripOnInput->False,
                FontColor->Dynamic[
                  If[MUnit`Palette`Private`hover$$, 
                   RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}
             },
             AutoDelete->False,
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
             GridBoxSpacings->{"Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           
           Appearance->FEPrivate`FrontEndResource[
            "MUnitExpressions", "ButtonAppearances"],
           
           ButtonFunction:>
            Block[{$ContextPath}, Needs["MUnit`"]; MUnit`testRerun[]],
           Evaluator->Automatic,
           FrameMargins->{{10, 10}, {0, 0}},
           ImageSize->Automatic,
           Method->"Queued"],
          DynamicBox[
           FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]],
          TooltipDelay->0.5],
         Annotation[#, 
          Dynamic[
           RawBoxes[
            FEPrivate`FrontEndResource["MUnitStrings", "Rerun-Tooltip"]]], 
          "Tooltip"]& ], MUnit`Palette`Private`hover$$ = 
        CurrentValue["MouseOver"],
        ImageSizeCache->{
         72.93935689926147, {10.933593688416295`, 15.066406311583705`}}],
       DynamicModuleValues:>{}]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  ImageSize->Full]], "BottomCell",
 CellID->392195689,ExpressionUUID->"08cd2e91-c13a-314b-a11b-6238215b137f"]
}, Open  ]]
},
WindowSize->{581.25, 648.75},
WindowMargins->{{Automatic, 279.75}, {48.75, Automatic}},
WindowTitle->Automatic,
DockedCells->{
  Cell[
   BoxData[
    PanelBox[
     PaneBox[
      TagBox[
       GridBox[{{
          StyleBox[
           DynamicBox[
            FEPrivate`FrontEndResource[
            "MUnitStrings", "TestingNotebook-Title"], 
            ImageSizeCache -> {100., {3., 9.}}], StripOnInput -> False, 
           FontSize -> 12, FontColor -> GrayLevel[0.4]], "\[SpanFromLeft]", 
          "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
          "\[SpanFromLeft]"}, {
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "New"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "New-Label"], 
                    ImageSizeCache -> {26., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteInsertTest[
                   InputNotebook[], "Test"]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "New-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource["MUnitStrings", "New-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {68., {11., 17.}}], DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ConvertSelection"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ConvertSelectiontoTest-Label"], 
                    ImageSizeCache -> {99., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; 
                 MUnit`buttonConvertCellGroup[
                   InputNotebook[]]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "ConvertSelectiontoTest-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "ConvertSelectiontoTest-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {141., {11., 17.}}], 
           DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneBox[
                TagBox[
                 GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "Run"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "Run-Label"], 
                    ImageSizeCache -> {22., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.3}}, "Rows" -> {{Automatic}}}], "Grid"], 
                ImageMargins -> {{0, 0}, {2, 0}}], Appearance -> 
               FEPrivate`FrontEndResource[
                "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
               Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteRun[
                   InputNotebook[]]], Evaluator -> Automatic, 
               FrameMargins -> {{10, 10}, {0, 0}}, 
               ImageSize -> {Automatic, 28}, Method -> "Queued"], 
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Run-Tooltip"]], 
              TooltipDelay -> 0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource["MUnitStrings", "Run-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {63., {11., 17.}}], DynamicModuleValues :> {}], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            ActionMenuBox[
             ButtonBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitStrings", "More-Label"], 
                    ImageSizeCache -> {30., {0., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]], 
                   PaneSelectorBox[{True -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Arrow-Hover"], 
                    ImageSizeCache -> {9., {2., 7.}}], False -> DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "Arrow-Off"], 
                    ImageSizeCache -> {9., {2., 7.}}]}, 
                    Dynamic[$CellContext`hover$$], 
                    BaselinePosition -> (Center -> Scaled[0.5])]}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{Automatic}}}], "Grid"], 
               ImageMargins -> {{0, 0}, {0, 0}}], Appearance -> 
              FEPrivate`FrontEndResource[
               "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> {},
               ContentPadding -> True, Evaluator -> None, 
              FrameMargins -> {{10, 10}, {0, 0}}, 
              ImageSize -> {Automatic, 28}, Method -> "Preemptive"], {TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "AssignTestIDs"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "AssignTestIDs-Label"]]}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteAddTestIDs[
                  InputNotebook[]]], TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "SaveAsDotwlt"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "SaveAsDotwlt-Label"]]}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteSaveAs[
                  InputNotebook[]]], TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "NewEnvironCell"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "NewEnvironCell-Label"]]}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              Block[{$ContextPath}, Needs["MUnit`"]; MUnit`PaletteInsertTest[
                  InputNotebook[], "Environ"]], TagBox[
                GridBox[{{
                   PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource["MUnitExpressions", "Help"]], 
                    BaselinePosition -> (Center -> Scaled[0.55])], 
                   DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Help-Label"]]}}, AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                "Grid"] :> 
              SystemOpen["paclet:tutorial/UsingTheTestingFramework"]}, 
             Appearance -> None, Method -> "Queued"], $CellContext`hover$$ = 
            CurrentValue["MouseOver"], ImageSizeCache -> {67., {10., 18.}}], 
           DynamicModuleValues :> {}], 
          ItemBox["\"\"", ItemSize -> Fit, StripOnInput -> False], 
          DynamicModuleBox[{$CellContext`hover$$ = False}, 
           DynamicWrapperBox[
            TagBox[
             TooltipBox[
              PaneSelectorBox[{True -> ButtonBox[
                  TagBox[
                   GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ClearTestResults-on"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ClearTestResults-Label"], 
                    ImageSizeCache -> {96., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, FontColor -> Dynamic[
                    If[$CellContext`hover$$, 
                    RGBColor[0.9059, 0.3451, 0.102], Inherited]]]}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                  Appearance -> 
                  FEPrivate`FrontEndResource[
                   "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
                  Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`clearTestResults[]], Evaluator -> Automatic, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Queued"], False -> 
                ButtonBox[
                  TagBox[
                   GridBox[{{
                    PaneBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ClearTestResults-off"], 
                    ImageSizeCache -> {15., {5., 10.}}], 
                    BaselinePosition -> (Center -> Scaled[0.5])], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ClearTestResults-Label"], 
                    ImageSizeCache -> {96., {1., 9.}}], "ButtonText", 
                    StripOnInput -> False, LineColor -> GrayLevel[0.7], 
                    FrontFaceColor -> GrayLevel[0.7], BackFaceColor -> 
                    GrayLevel[0.7], GraphicsColor -> GrayLevel[0.7], 
                    FontColor -> GrayLevel[0.7]]}}, AutoDelete -> False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.4}}, "Rows" -> {{Automatic}}}], "Grid"], 
                  Appearance -> 
                  FEPrivate`FrontEndResource[
                   "MUnitExpressions", "ButtonAppearances"], ButtonFunction :> 
                  Null, Enabled -> False, Evaluator -> Automatic, 
                  FrameMargins -> {{10, 10}, {0, 0}}, 
                  ImageSize -> {Automatic, 28}, Method -> "Queued"]}, 
               Dynamic[CurrentValue[
                  ButtonNotebook[], {TaggingRules, "$testsRun"}, False] === 
                True]], 
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "ClearTestResults-Tooltip"]], TooltipDelay -> 
              0.5], Annotation[#, 
              Dynamic[
               RawBoxes[
                FEPrivate`FrontEndResource[
                "MUnitStrings", "ClearTestResults-Tooltip"]]], 
              "Tooltip"]& ], $CellContext`hover$$ = CurrentValue["MouseOver"],
             ImageSizeCache -> {138., {10., 18.}}], 
           DynamicModuleValues :> {}]}}, AutoDelete -> False, 
        BaseStyle -> {
         "DialogStyle", Bold, FontColor -> 
          RGBColor[
           0.33333333333333337`, 0.33333333333333337`, 0.33333333333333337`]},
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Bottom}}}, 
        GridBoxDividers -> {"Columns" -> {{False}}}, 
        GridBoxItemSize -> {
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
        GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{1}}}], 
       "Grid"], ImageMargins -> {{5, 5}, {Automatic, Automatic}}], Appearance -> 
     FEPrivate`FrontEndResource["MUnitExpressions", "StaticToolbarNinePatch"],
      FrameMargins -> {{26, 12}, {8, 12}}, ImageMargins -> -1]], "DockedCell",
    CellFrameMargins -> 0, ShowCellTags -> False, CellTags -> 
   "MUnitStaticToolbar"], 
  Cell[
   BoxData[
    PaneBox[
     TagBox[
      GridBox[{{
         TagBox[
          GridBox[{{
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "MUnitStrings", "TotalTestsRun-Label"]], 11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"1\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              GrayLevel[0.55], FrameStyle -> GrayLevel[0.55], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False], 
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Successes-Label"]],
               11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0., 0.6, 0.], FrameStyle -> RGBColor[0., 0.6, 0.], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitStrings", "Failures-Label"]], 11, 
                  RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"(\"", 8, StripOnInput -> False], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "WrongResults-Label"]], 10, StripOnInput -> 
                    False], 
                    StyleBox["\")\"", 8, StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], 
                   RGBColor[0.521569, 0.521569, 0.521569], StripOnInput -> 
                   False], 
                  ImageMargins -> {{
                    Automatic, Automatic}, {-0.3, Automatic}}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "ColumnsIndexed" -> {2 -> 0.3}, "Rows" -> {{Automatic}}}], 
              "Grid"], 
             FrameBox[
              StyleBox["\"1\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.7, 0., 0], FrameStyle -> RGBColor[0.7, 0., 0], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False]}, {
            "\"\"", "\"\"", 
             StyleBox[
              DynamicBox[
               FEPrivate`FrontEndResource["MUnitStrings", "Errors-Label"]], 
              11, 
              RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.945, 0.81, 0.314], FrameStyle -> 
              RGBColor[0.945, 0.81, 0.314], FrameMargins -> {{8, 8}, {0, 0}}, 
              StripOnInput -> False], 
             TagBox[
              GridBox[{{
                 StyleBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitStrings", "Failures-Label"]], 11, 
                  RGBColor[0.34902, 0.34902, 0.34902], StripOnInput -> False], 
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox["\"(\"", 8, StripOnInput -> False], 
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Messages-Label"]], 10, StripOnInput -> 
                    False], 
                    StyleBox["\")\"", 8, StripOnInput -> False]}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], 
                   RGBColor[0.521569, 0.521569, 0.521569], StripOnInput -> 
                   False], 
                  ImageMargins -> {{
                    Automatic, Automatic}, {-0.3, Automatic}}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "ColumnsIndexed" -> {2 -> 0.3}, "Rows" -> {{Automatic}}}], 
              "Grid"], 
             FrameBox[
              StyleBox["\"0\"", 11, Bold, 
               GrayLevel[1], StripOnInput -> False], Background -> 
              RGBColor[0.921569, 0.678431, 0.337255], FrameStyle -> 
              RGBColor[0.921569, 0.678431, 0.337255], 
              FrameMargins -> {{8, 8}, {0, 0}}, StripOnInput -> False]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           GridBoxSpacings -> {
            "ColumnsIndexed" -> {
              2 -> 0.7, 3 -> 1.5, 4 -> 0.7, 5 -> 1.5, 6 -> 0.7}, 
             "Rows" -> {{0.5}}}, 
           BaseStyle -> {FontFamily -> "Helvetica", FontSize -> 12}], "Grid"], 
         ItemBox["", ItemSize -> Fit, StripOnInput -> False], 
         DynamicModuleBox[{
          MUnit`Palette`Private`$barDisplayType$$ = "InSequence", 
           MUnit`Palette`Private`resultColorBar$$}, 
          TagBox[
           GridBox[{{
              DynamicBox[
               ToBoxes[
                
                MUnit`Palette`Private`resultColorBar$$[{251743139}, {}, {}, {
                 1}, {}, 250, 12], StandardForm]], 
              ActionMenuBox[
               PaneSelectorBox[{False -> DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "Arrow-Off"]], True -> DynamicBox[
                   FEPrivate`FrontEndResource[
                   "MUnitExpressions", "Arrow-Hover"]]}, 
                Dynamic[
                 CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                FrameMargins -> 0], {DynamicBox[
                  ToBoxes[
                   (If[MUnit`Palette`Private`$barDisplayType$$ === "ByStatus", 
                    Grid[{{"\[Checkmark]", #}}], 
                    Grid[{{
                    Spacer[10], #}}]]& )[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "ByStatus-Label"]]]], StandardForm]] :> (
                 MUnit`Palette`Private`$barDisplayType$$ = "ByStatus"), 
                DynamicBox[
                  ToBoxes[
                   (If[
                   MUnit`Palette`Private`$barDisplayType$$ === "InSequence", 
                    Grid[{{"\[Checkmark]", #}}], 
                    Grid[{{
                    Spacer[10], #}}]]& )[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "BySequence-Label"]]]], 
                   StandardForm]] :> (MUnit`Palette`Private`$barDisplayType$$ = 
                 "InSequence")}, Method -> "Queued", Appearance -> None, 
               ContentPadding -> False]}, {
              PaneSelectorBox[{True -> TagBox[
                  GridBox[{{
                    ButtonBox[
                    TagBox[
                    TooltipBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "PreviousFailure"]], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "PreviousFailure-Tooltip"]], TooltipDelay -> 
                    0.35], Annotation[#, 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "PreviousFailure-Tooltip"]]], 
                    "Tooltip"]& ], ButtonFunction :> 
                    Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`findFailedTest[
                    ButtonNotebook[], "Previous"]], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Queued", Evaluator -> Automatic], 
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Failure-Label"]], ButtonFunction :> {}, 
                    Evaluator -> None, ImageSize -> {Automatic, 28}, Enabled -> 
                    False, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "DefaultButtonAppearance"], 
                    FrameMargins -> {{7, 7}, {0, 0}}, Method -> "Preemptive"], 
                    ButtonBox[
                    TagBox[
                    TooltipBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "NextFailure"]], 
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "NextFailure-Tooltip"]], TooltipDelay -> 
                    0.35], Annotation[#, 
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "NextFailure-Tooltip"]]], "Tooltip"]& ], 
                    ButtonFunction :> 
                    Block[{$ContextPath}, Needs["MUnit`"]; 
                    MUnit`findFailedTest[
                    ButtonNotebook[], "Next"]], Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Queued", Evaluator -> Automatic]}}, AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "ColumnsIndexed" -> {1 -> 0, 2 -> -0.1, 3 -> -0.1}, 
                    "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    "DialogStyle", Bold, FontColor -> 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]}], "Grid"], False -> TagBox[
                  GridBox[{{
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "PreviousFailureDeactivated"]], 
                    ButtonFunction :> {}, Evaluator -> None, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Preemptive"], 
                    ButtonBox[
                    StyleBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitStrings", "Failure-Label"]], 
                    GrayLevel[0.7], StripOnInput -> False], 
                    ButtonFunction :> {}, Evaluator -> None, 
                    ImageSize -> {Automatic, 28}, Enabled -> False, 
                    Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "DefaultButtonAppearance"], 
                    FrameMargins -> {{7, 7}, {0, 0}}, Method -> "Preemptive"], 
                    ButtonBox[
                    DynamicBox[
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "NextFailureDeactivated"]], 
                    ButtonFunction :> {}, Evaluator -> None, Appearance -> 
                    FEPrivate`FrontEndResource[
                    "MUnitExpressions", "ButtonAppearances"], 
                    ImageSize -> {Automatic, 28}, 
                    FrameMargins -> {{7, 7}, {0, 0}}, Enabled -> 
                    FEPrivate`SameQ[
                    FrontEnd`CurrentValue[
                    FrontEnd`ButtonNotebook[], {
                    TaggingRules, "$someTestsFailed"}, False], True], Method -> 
                    "Preemptive"]}}, AutoDelete -> False, 
                   GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {
                    "ColumnsIndexed" -> {1 -> 0, 2 -> -0.1, 3 -> -0.1}, 
                    "Rows" -> {{Automatic}}}, 
                   BaseStyle -> {
                    "DialogStyle", Bold, FontColor -> 
                    RGBColor[
                    0.33333333333333337`, 0.33333333333333337`, 
                    0.33333333333333337`]}], "Grid"]}, 
               FrontEnd`CurrentValue[
                FrontEnd`ButtonNotebook[], {TaggingRules, "$someTestsFailed"},
                 False], ImageSize -> All], "\"\""}}, 
            GridBoxAlignment -> {
             "Columns" -> {Right, Left}, "Rows" -> {{Automatic}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {
             "ColumnsIndexed" -> {2 -> 0.5}, "RowsIndexed" -> {2 -> 0.75}}], 
           "Grid"], Initialization :> (MUnit`Palette`Private`resultColorBar$$[
             Pattern[MUnit`Palette`Private`cellids1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`successPositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`errorPositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`failurePositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`messagePositions1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`barlength1$, 
              Blank[]], 
             Pattern[MUnit`Palette`Private`barheight1$, 
              Blank[]]] := 
           Module[{MUnit`Palette`Private`successPositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`successPositions1$], 
              MUnit`Palette`Private`errorPositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`errorPositions1$], 
              MUnit`Palette`Private`failurePositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`failurePositions1$], 
              MUnit`Palette`Private`messagePositions2$ = Map[{#, 
                 Extract[MUnit`Palette`Private`cellids1$, {#}]}& , 
                MUnit`Palette`Private`messagePositions1$], 
              MUnit`Palette`Private`sp$, MUnit`Palette`Private`testnumber$, 
              MUnit`Palette`Private`buttonlength$}, 
             MUnit`Palette`Private`sp$ = Cases[
                ReplaceAll[
                 (If[MUnit`Palette`Private`$barDisplayType$$ === "ByStatus", 
                  SplitBy[#, Last], 
                  SplitBy[
                   SortBy[#, Part[#, 1, 1]& ], Last]]& )[
                  Join[
                   Map[{#, "s"}& , MUnit`Palette`Private`successPositions2$], 
                   Map[{#, "e"}& , MUnit`Palette`Private`errorPositions2$], 
                   Map[{#, "f"}& , MUnit`Palette`Private`failurePositions2$], 
                   
                   Map[{#, "m"}& , 
                    MUnit`Palette`Private`messagePositions2$]]], {{
                    Pattern[MUnit`Palette`Private`a, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`n, 
                    Blank[]]}, 
                   Pattern[MUnit`Palette`Private`s, 
                    Blank[String]]} :> {{
                   MUnit`Palette`Private`a, MUnit`Palette`Private`s}, 
                   MUnit`Palette`Private`n}], {{
                  Blank[], 
                  Blank[String]}, 
                 Blank[]}, {1, Infinity}]; 
             MUnit`Palette`Private`testnumber$ = 
              Length[MUnit`Palette`Private`successPositions1$] + 
               Length[MUnit`Palette`Private`errorPositions1$] + 
               Length[MUnit`Palette`Private`failurePositions1$] + 
               Length[MUnit`Palette`Private`messagePositions1$]; 
             If[MUnit`Palette`Private`testnumber$ > 0, 
               MUnit`Palette`Private`buttonlength$ = 
               MUnit`Palette`Private`barlength1$/N[
                MUnit`Palette`Private`testnumber$]]; 
             If[MUnit`Palette`Private`testnumber$ > 50, 
               Graphics[
                Raster[{
                  ReplaceAll[MUnit`Palette`Private`sp$, {{
                    Pattern[MUnit`Palette`Private`n, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`a, 
                    Blank[String]]}, 
                    Pattern[MUnit`Palette`Private`b, 
                    Blank[]]} :> 
                   Switch[MUnit`Palette`Private`a, "s", {0.380392, 0.603922, 
                    0.384314}, "e", {0.945, 0.81, 0.314}, "m", {0.921569, 
                    0.678431, 0.337255}, "f", {0.74902, 0.403922, 0.4}]]}, {{
                  0, 0}, {
                  MUnit`Palette`Private`barlength1$ + 50, 
                   MUnit`Palette`Private`barheight1$}}], 
                ImageSize -> {
                 MUnit`Palette`Private`barlength1$ + 50, 
                  MUnit`Palette`Private`barheight1$}, 
                PlotRange -> {{0, MUnit`Palette`Private`barlength1$ + 50}, {
                  0, MUnit`Palette`Private`barheight1$}}], 
               Grid[
                If[MUnit`Palette`Private`testnumber$ === 0, {{}}, {
                  Riffle[
                   ReplaceAll[MUnit`Palette`Private`sp$, {{
                    Pattern[MUnit`Palette`Private`n$, 
                    Blank[]], 
                    Pattern[MUnit`Palette`Private`a$, 
                    Blank[String]]}, 
                    Pattern[MUnit`Palette`Private`b$, 
                    Blank[]]} :> Button[
                    Tooltip[
                    Graphics[{
                    Switch[MUnit`Palette`Private`a$, "s", 
                    RGBColor[0., 0.6, 0.], "e", 
                    RGBColor[0.945, 0.81, 0.314], "m", 
                    RGBColor[0.921569, 0.678431, 0.337255], "f", 
                    RGBColor[0.7, 0., 0]], 
                    
                    Rectangle[{0, 0}, {
                    MUnit`Palette`Private`buttonlength$, 
                    MUnit`Palette`Private`barheight1$}]}, ImagePadding -> 0, 
                    PlotRangePadding -> 0, 
                    ImageSize -> {
                    MUnit`Palette`Private`buttonlength$, 
                    MUnit`Palette`Private`barheight1$}], "Test " <> 
                    ToString[MUnit`Palette`Private`n$], TooltipDelay -> 0.35],
                     NotebookFind[
                    ButtonNotebook[], MUnit`Palette`Private`b$, All, CellID]; 
                    SelectionMove[
                    ButtonNotebook[], All, CellGroup], Appearance -> None, 
                    Method -> "Queued"]], 
                   Graphics[{White, 
                    
                    Rectangle[{0, 0}, {
                    1, MUnit`Palette`Private`barheight1$}]}, ImagePadding -> 
                    0, PlotRangePadding -> 0, 
                    ImageSize -> {1, MUnit`Palette`Private`barheight1$}]]}], 
                Alignment -> {Automatic, Center}, Spacings -> {0, 0}]]]), 
          DynamicModuleValues :> {}]}}, 
       GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Right}}}, 
       GridBoxItemSize -> {
        "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
     FrameMargins -> {{26, 12}, {Automatic, Automatic}}, ImageSize -> Full, 
     BaseStyle -> {Background -> RGBColor[0.827, 0.827, 0.827]}]], Background -> 
   RGBColor[0.827, 0.827, 0.827], "DockedCell", CellTags -> 
   "MUnitResultsCell"]},
TaggingRules-><|"$testsRun" -> True, "$someTestsFailed" -> True|>,
FrontEndVersion->"14.1 for Microsoft Windows (64-bit) (July 16, 2024)",
StyleDefinitions->FrontEnd`FileName[{"MUnit"}, "MUnit.nb", CharacterEncoding -> 
  "UTF-8"],
ExpressionUUID->"b1868da8-783d-5f4f-88e8-2b83f0b16a44"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[603, 23, 3319, 91, 367, "Environ",ExpressionUUID->"a84a7730-0b30-e540-9e71-c224c5834f89",
 CellID->163276962],
Cell[3925, 116, 493, 9, 44, "Message",ExpressionUUID->"7567496b-3f1d-fa45-9e5f-f35e002aa202",
 CellID->342844701],
Cell[4421, 127, 495, 9, 26, "Message",ExpressionUUID->"f997d7c5-aeb4-414e-95c3-1d6cd483b722",
 CellID->362658460]
}, Open  ]],
Cell[CellGroupData[{
Cell[4953, 141, 448, 9, 46, "VerificationTest",ExpressionUUID->"fcb45dd5-fd2e-464e-8e38-fefda24beed0",
 CellID->11043262],
Cell[5404, 152, 189, 2, 38, "ExpectedOutput",ExpressionUUID->"453d3be9-7e6c-e747-982e-ab3a602606ef",
 CellID->312015750],
Cell[5596, 156, 113, 1, 38, "ActualOutput",ExpressionUUID->"6786a582-34d4-8c4a-8234-ca8dea4f71ef",
 CellID->7206544],
Cell[5712, 159, 256, 5, 39, "TestOptions",ExpressionUUID->"3baf7672-685b-a644-b5d7-93c010e25630",
 CellID->215294058],
Cell[5971, 166, 7884, 177, 21, "TestFailure",ExpressionUUID->"bc8eb20f-a9ab-0e4b-882f-56493bed66eb",
 CellID->251743139],
Cell[13858, 345, 13600, 330, 52, "BottomCell",ExpressionUUID->"08cd2e91-c13a-314b-a11b-6238215b137f",
 CellID->392195689]
}, Open  ]]
}
]
*)

